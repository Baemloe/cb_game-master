{"ast":null,"code":"import React from\"react\";import TextUnits from\"./TextUnits\";import List from\"./List\";import Input from\"./Input\";import{jsx as _jsx}from\"react/jsx-runtime\";class ListTable extends React.Component{constructor(props){super(props);this.listsArray=new Map();this.createList=this.getList.bind(this);this.state={lArr:[]};}componentDidMount(){this.props.start.up.current.state.set(/*#__PURE__*/_jsx(TextUnits,{textValue:this.props.data.taskText}));this.props.start.control.current.state.mount([{click:this.check.bind(this),text:\"Проверить\"}]);}render(){return/*#__PURE__*/_jsx(\"table\",{className:\"FullBlock\",children:/*#__PURE__*/_jsx(\"tbody\",{children:this.props.data.table.map((row,index)=>{return/*#__PURE__*/_jsx(\"tr\",{children:row.map((cell,index_2)=>{return/*#__PURE__*/_jsx(\"td\",{style:{background:\"white\",color:\"var(--textColor)\",padding:\"1vh\"},children:cell.includes(\"check\")?this.createList(cell,index+\"_\"+index_2):cell},index+\"_\"+index_2);})},index);})})});}getList(cell,key){let cellName=cell.split(\"_\");let buff=/*#__PURE__*/React.createRef();let jsx;switch(cellName[1]){case\"list\":jsx=/*#__PURE__*/_jsx(List,{index:cellName[2],listArr:this.props.data.list,ref:buff});break;case\"input\":jsx=/*#__PURE__*/_jsx(Input,{index:cellName[2],listArr:this.props.data.list,ref:buff});break;}if(!this.listsArray.has(key)){this.listsArray.set(key,buff);}return jsx;}check(){let message={text_1:[]};let mistakes=0;let points=true;for(let oneList of this.listsArray.keys()){if(this.listsArray.get(oneList).current.state.result==null){message.text_1.push(\"Выбери все ответы!\");this.props.start.up.current.state.set(/*#__PURE__*/_jsx(TextUnits,{textValue:message}),true,2000);points=false;break;}else if(this.listsArray.get(oneList).current.state.result==0){mistakes=mistakes+1;}}if(points){if(mistakes==0){points=5;}else if(mistakes==1){points=4;}else{points=0;}message.text_1.push(\"\\u0422\\u044B \\u043D\\u0430\\u0431\\u0440\\u0430\\u043B \".concat(points,\" \\u043E\\u0447\\u043A\\u043E\\u0432!\"));this.props.start.up.current.state.set(/*#__PURE__*/_jsx(TextUnits,{textValue:message}),true,2000);this.listsArray.forEach((value,key,map)=>{value.current.state.end();});this.props.start.up.current.state.pointsUpdate(points);this.props.start.control.current.state.mount([{click:this.props.start.next,text:\"Дальше\"}]);}}}export default ListTable;","map":{"version":3,"names":["React","TextUnits","List","Input","jsx","_jsx","ListTable","Component","constructor","props","listsArray","Map","createList","getList","bind","state","lArr","componentDidMount","start","up","current","set","textValue","data","taskText","control","mount","click","check","text","render","className","children","table","map","row","index","cell","index_2","style","background","color","padding","includes","key","cellName","split","buff","createRef","listArr","list","ref","has","message","text_1","mistakes","points","oneList","keys","get","result","push","concat","forEach","value","end","pointsUpdate","next"],"sources":["/Users/maksimgazdanov/Desktop/Chikanov/cb_game-master/cb_game-master/src/units/Table.js"],"sourcesContent":["import React from \"react\";\nimport TextUnits from \"./TextUnits\";\nimport List from \"./List\";\nimport Input from \"./Input\";\nclass ListTable extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.listsArray = new Map();\n        this.createList = this.getList.bind(this);\n        this.state = \n        {\n            lArr: []\n        }\n    }\n    componentDidMount()\n    {\n        this.props.start.up.current.state.set(<TextUnits textValue={this.props.data.taskText}/>);\n        this.props.start.control.current.state.mount([{click: this.check.bind(this), text: \"Проверить\"}]);\n    }\n    render()\n    {\n        return <table className=\"FullBlock\"><tbody>\n            {this.props.data.table.map((row, index)=>{\n                return <tr key={index}>{row.map((cell, index_2)=>\n                    {return <td style={{background: \"white\", color: \"var(--textColor)\", padding: \"1vh\"}} key={index + \"_\" + index_2}>  \n                        {cell.includes(\"check\")? this.createList(cell, index + \"_\" + index_2): cell}\n                    </td>})}\n                </tr>})}\n            </tbody></table>\n    }\n    getList(cell, key)\n    {\n        \n        let cellName = cell.split(\"_\");      \n        let buff = React.createRef();\n        let jsx;\n        switch(cellName[1])\n        {\n            case \"list\":\n                jsx = <List index={cellName[2]} listArr={this.props.data.list} ref={buff}/>\n                break;\n            case \"input\":\n                jsx = <Input index ={cellName[2]} listArr={this.props.data.list} ref={buff}/>;\n                break;\n        }  \n        if(!this.listsArray.has(key))\n        {\n            this.listsArray.set(key, buff);\n        }\n        return jsx;\n    }\n    check()\n    {\n        let message = {text_1: []}\n        let mistakes = 0;\n        let points = true;\n        for(let oneList of this.listsArray.keys())\n        {\n\n            if(this.listsArray.get(oneList).current.state.result == null)\n            {\n                message.text_1.push(\"Выбери все ответы!\");\n                this.props.start.up.current.state.set(<TextUnits textValue={message}/>, true, 2000);\n                points = false;\n                break;\n            }\n            else if(this.listsArray.get(oneList).current.state.result == 0)\n            {\n                mistakes = mistakes + 1;\n            }\n        }\n        if(points)\n        {\n            if(mistakes == 0)\n            {\n                points = 5;\n            }\n            else if(mistakes == 1)\n            {\n                points = 4;\n            }\n            else\n            {\n                points = 0;\n            }\n            message.text_1.push(`Ты набрал ${points} очков!`);\n            this.props.start.up.current.state.set(<TextUnits textValue={message}/>, true, 2000);\n            this.listsArray.forEach((value, key, map)=>{\n                value.current.state.end();\n            });\n            this.props.start.up.current.state.pointsUpdate(points);\n            this.props.start.control.current.state.mount([{click: this.props.start.next, text: \"Дальше\"}]);\n        }\n    }\n}\nexport default ListTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}